{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamhe\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-two-mern-app\\\\client\\\\src\\\\context\\\\blog_context\\\\BlogState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport blogReducer from \"./blogReducer\";\nimport * as ActionTypes from \"../ContextActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogContext = /*#__PURE__*/createContext();\nexport default function BlogState(props) {\n  _s();\n\n  const initialstate = {\n    blogs: null,\n    currentBlog: null,\n    toasts: null,\n    blogCreated: false\n  };\n  const [state, dispatch] = useReducer(blogReducer, initialstate);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": localStorage.getItem(\"token\")\n    }\n  }; // #region --------------[ Actions ]--------------\n\n  const getBlogs = async () => {\n    try {\n      const res = await axios.get(\"/api/blogs\", config);\n      dispatch({\n        type: ActionTypes.GET_BLOGS_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.BLOG_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const getBlogById = async blogId => {\n    try {\n      dispatch({\n        type: ActionTypes.GET_BLOG_BY_ID,\n        payload: blogId\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.BLOG_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const createBlog = async blogData => {\n    try {\n      const res = await axios.post(\"/api/blogs\", blogData, config);\n      dispatch({\n        type: ActionTypes.NEW_BLOG_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.BLOG_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const updateBlog = async blogData => {\n    try {\n      const res = await axios.put(`/api/blogs/${blogData._id}`, blogData, config);\n      dispatch({\n        type: ActionTypes.UPDATE_BLOG,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.BLOG_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const deleteBlog = async blogId => {\n    try {\n      const res = await axios.delete(`/api/blogs/${blogId}`, config);\n      dispatch({\n        type: ActionTypes.BLOG_DELETE,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.BLOG_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const clearErrors = async () => {\n    dispatch({\n      type: ActionTypes.CLEAR_ERRORS\n    });\n  };\n\n  const clearBlogs = async () => {\n    dispatch({\n      type: ActionTypes.CLEAR_BLOGS\n    });\n  };\n\n  const clearCurrentBlog = () => {\n    dispatch({\n      type: ActionTypes.CLEAR_CURRENT_BLOG\n    });\n  }; // #endregion\n\n\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      blogs: state.blogs,\n      currentBlog: state.currentBlog,\n      toasts: state.toasts,\n      blogCreated: state.blogCreated,\n      clearCurrentBlog,\n      getBlogs,\n      getBlogById,\n      createBlog,\n      updateBlog,\n      deleteBlog,\n      clearErrors,\n      clearBlogs\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogState, \"1CBH1cOl7p/Vv35rAFPx8i6rqyY=\");\n\n_c = BlogState;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogState\");","map":{"version":3,"names":["createContext","useReducer","axios","blogReducer","ActionTypes","BlogContext","BlogState","props","initialstate","blogs","currentBlog","toasts","blogCreated","state","dispatch","config","headers","localStorage","getItem","getBlogs","res","get","type","GET_BLOGS_SUCCESS","payload","data","err","console","log","response","BLOG_FAIL","getBlogById","blogId","GET_BLOG_BY_ID","createBlog","blogData","post","NEW_BLOG_SUCCESS","updateBlog","put","_id","UPDATE_BLOG","deleteBlog","delete","BLOG_DELETE","clearErrors","CLEAR_ERRORS","clearBlogs","CLEAR_BLOGS","clearCurrentBlog","CLEAR_CURRENT_BLOG","children"],"sources":["C:/Users/iamhe/OneDrive/Documents/GitHub/project-two-mern-app/client/src/context/blog_context/BlogState.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport blogReducer from \"./blogReducer\";\r\nimport * as ActionTypes from \"../ContextActions\";\r\n\r\nexport const BlogContext = createContext();\r\n\r\nexport default function BlogState(props) {\r\n  const initialstate = {\r\n    blogs: null,\r\n    currentBlog: null,\r\n    toasts: null,\r\n    blogCreated: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(blogReducer, initialstate);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  // #region --------------[ Actions ]--------------\r\n\r\n  const getBlogs = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/blogs\", config);\r\n      dispatch({\r\n        type: ActionTypes.GET_BLOGS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      dispatch({\r\n        type: ActionTypes.BLOG_FAIL,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getBlogById = async (blogId) => {\r\n    try {\r\n      dispatch({\r\n        type: ActionTypes.GET_BLOG_BY_ID,\r\n        payload: blogId,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      dispatch({\r\n        type: ActionTypes.BLOG_FAIL,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const createBlog = async (blogData) => {\r\n    try {\r\n      const res = await axios.post(\"/api/blogs\", blogData, config);\r\n      dispatch({\r\n        type: ActionTypes.NEW_BLOG_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      dispatch({\r\n        type: ActionTypes.BLOG_FAIL,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateBlog = async (blogData) => {\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/blogs/${blogData._id}`,\r\n        blogData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: ActionTypes.UPDATE_BLOG,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      dispatch({\r\n        type: ActionTypes.BLOG_FAIL,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteBlog = async (blogId) => {\r\n    try {\r\n      const res = await axios.delete(`/api/blogs/${blogId}`, config);\r\n      dispatch({\r\n        type: ActionTypes.BLOG_DELETE,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      dispatch({\r\n        type: ActionTypes.BLOG_FAIL,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearErrors = async () => {\r\n    dispatch({\r\n      type: ActionTypes.CLEAR_ERRORS,\r\n    });\r\n  };\r\n\r\n  const clearBlogs = async () => {\r\n    dispatch({\r\n      type: ActionTypes.CLEAR_BLOGS,\r\n    });\r\n  };\r\n\r\n  const clearCurrentBlog = () => {\r\n    dispatch({ type: ActionTypes.CLEAR_CURRENT_BLOG });\r\n  };\r\n\r\n  // #endregion\r\n\r\n  return (\r\n    <BlogContext.Provider\r\n      value={{\r\n        blogs: state.blogs,\r\n        currentBlog: state.currentBlog,\r\n        toasts: state.toasts,\r\n        blogCreated: state.blogCreated,\r\n\r\n        clearCurrentBlog,\r\n        getBlogs,\r\n        getBlogById,\r\n        createBlog,\r\n        updateBlog,\r\n        deleteBlog,\r\n        clearErrors,\r\n        clearBlogs,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BlogContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}